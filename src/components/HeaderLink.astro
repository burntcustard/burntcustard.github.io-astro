---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] ?? '');
---

<style>
  a {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.25rem;
    background: var(--gray-darker);
    padding-inline: .25rem;
    border: 2px solid var(--off-white);
    outline: 2px solid transparent;
    outline-offset: -2px;
    border-image-slice: 1;
    border-image-source: conic-gradient(
      from var(--deg),
      var(--off-white),
      #999,
      var(--off-white)
    );
    height: 2rem;
    transition: color .3s, outline-color .3s;
  }

  @media (min-width: 501px) {
    a {
      font-size: 1.5rem;
      padding-inline: .75rem;
      padding-block: .25rem;
    }

    a::before,
    a::after {
      position: absolute;
      display: block;
      transition: .2s all;
      content: '';
    }
  }

  a:focus,
  a:hover {
    color: var(--white);
    outline-color: var(--off-white);
  }

  a[aria-current] {
    color: var(--yellow);
  }

  a[href="/"] {
    &[aria-current] {
      display: none;
    }

    @media (min-width: 501px) {
      &::before,
      &::after {
        font-size: .6em;
        font-weight: 600;
      }

      &::before {
        content: '<';
        left: .2em;
      }

      &::after {
        content: '-';
        right: .2em;
      }

      &:not(:focus, :hover)::before,
      &:not(:focus, :hover)::after {
        opacity: 0;
      }
    }
  }

  @keyframes play-pong {
    0%   { transform: translateY(-8px); }
    100% { transform: translateY( 8px); }
  }

  a[href="/play"] {
    &::before,
    &::after {
      width: 2px;
      height: 14px;
    }

    &::before {
      left: -2px;
    }

    &::after {
      right: -2px;
    }

    &:focus::before,
    &:hover::before,
    &:focus::after,
    &:hover::after {
      background-color: var(--off-white);
      animation: 1s linear infinite play-pong;
    }

    &:focus::before,
    &:hover::before {
      left: 4px;
      animation-direction: alternate;
    }

    &:focus::after,
    &:hover::after {
      right: 4px;
      animation-direction: alternate-reverse;
    }
  }

  a[href="/work"] {
    isolation: isolate;

    @media (min-width: 501px) {
      &::before {
        position: absolute;
        top: 3px;
        right: 100%;
        bottom: 100%;
        left: 3px;
        z-index: -1;
        background:
          linear-gradient(
            -45deg,
            transparent,
            transparent 6px,
            var(--off-white) 0
          );
        transition: all .1s;
      }

      &::after {
        top: -2px;
        width: 18px;
        background:
          linear-gradient(
            var(--gray-darker),
            var(--gray-darker) 5px,
            var(--off-white) 0
          );
        border: 2px solid transparent;
        border-bottom: none;
        box-shadow: inset 0 0 0 2px var(--gray-darker);
        transition: all .15s;
      }

      &:focus,
      &:hover {
        color: var(--gray-darker);
        transition: all .15s;
      }

      &:focus::before,
      &:hover::before {
        right: 3px;
        bottom: 3px;
      }

      &:focus::after,
      &:hover::after {
        top: -4px;
        padding-top: 9px;
        transition: all .15s .1s;
        border-color: var(--off-white);
      }
    }
  }

  @keyframes blink {
    0%   { opacity: .7; }
    100% { opacity: 1; }
  }

  a[href="/blog"] {
    &::before,
    &::after {
      transition: .25s all steps(3, end);
    }

    &::before {
      top: calc(100% - 18px);
      right: 10px;
      left: 10px;
      z-index: -1;
      height: 18px;
      background:
        linear-gradient(
          to right,
          var(--gray-darker),
          var(--gray-darker) 6px,
          transparent 0,
          transparent calc(100% - 6px),
          var(--gray-darker) 0,
          var(--gray-darker)
        ),
        linear-gradient(
          transparent,
          transparent 6px,
          white 0,
          white 8px,
          transparent 0,
          transparent 12px,
          white 0,
          white 14px,
          transparent 0,
          transparent
        );
      border: 2px solid var(--off-white);
      border-top: none;
    }

    &::after {
      top: 5px;
      right: 5px;
      width: 3px;
      height: 3px;
      background: white;
      border-radius: 50%;
      opacity: 0;
    }

    &:focus::before,
    &:hover::before {
      top: 100%;
    }

    &:focus::after,
    &:hover::after {
      animation: 1s ease-in-out infinite alternate blink;
    }
  }
</style>

<a
  href={href}
  aria-current={isActive || undefined}
  {...props}
>
  <slot />
</a>
